
import React from 'react';
import { X } from 'lucide-react';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Separator } from '@/components/ui/separator';
import { EnrichedVulnerability } from '@/types/vulnerability';
import { getSeverityColor } from './VulnerabilityCard';
import { cn } from '@/lib/utils';

interface VulnerabilityDetailProps {
  vulnerability: EnrichedVulnerability;
  onClose: () => void;
}

// Helper function to safely render HTML content
const createMarkup = (html: string) => {
  return { __html: html };
};

// Helper function to clean content of HTML tags and unwanted URLs
const cleanContent = (content: string) => {
  // First remove HTML tags
  let cleaned = content.replace(/<\/?[^>]+(>|$)/g, "");
  // Then remove any lovable.dev references
  cleaned = cleaned.replace(/https?:\/\/lovable\.dev\/[^\s]*/g, "");
  cleaned = cleaned.replace(/lovable\.dev/g, "");
  return cleaned;
};

const VulnerabilityDetail: React.FC<VulnerabilityDetailProps> = ({ vulnerability, onClose }) => {
  const formattedDate = new Date(vulnerability.pubDate).toLocaleDateString('en-US', {
    year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit'
  });

  return (
    <div className="fixed inset-0 z-50 bg-black/50 flex items-center justify-center p-4">
      <div className="bg-card rounded-lg shadow-lg w-full max-w-4xl max-h-[90vh] overflow-hidden flex flex-col">
        <div className={cn(`h-2 w-full`, getSeverityColor(vulnerability.severityLevel))} />
        
        <div className="flex justify-between items-start p-6">
          <div>
            <div className="flex gap-2 items-center mb-2">
              <Badge variant="outline">{vulnerability.cveId}</Badge>
              <Badge className={cn("font-semibold", getSeverityColor(vulnerability.severityLevel), "text-white")}>
                {vulnerability.severityLevel.toUpperCase()}
              </Badge>
              {vulnerability.cvssScore && (
                <Badge variant="outline" className="font-mono">
                  CVSS {vulnerability.cvssScore.toFixed(1)}
                </Badge>
              )}
            </div>
            <h2 className="text-2xl font-bold mb-1">{vulnerability.title}</h2>
            <p className="text-sm text-muted-foreground">Published: {formattedDate}</p>
          </div>
          
          <Button variant="ghost" size="icon" onClick={onClose}>
            <X className="h-5 w-5" />
          </Button>
        </div>
        
        <Separator />
        
        <div className="flex-1 overflow-y-auto p-6">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 className="text-lg font-semibold mb-2">Description</h3>
              <p className="text-sm">{cleanContent(vulnerability.description)}</p>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold mb-2">Affected Products</h3>
              <div className="flex flex-wrap gap-1">
                {vulnerability.affectedProducts.map((product, index) => (
                  <Badge key={index} variant="secondary">
                    {product}
                  </Badge>
                ))}
              </div>
            </div>
          </div>
          
          <Separator className="my-6" />
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 className="text-lg font-semibold mb-2">Technical Analysis</h3>
              <p className="text-sm">{cleanContent(vulnerability.technicalAnalysis)}</p>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold mb-2">Business Impact</h3>
              <p className="text-sm">{cleanContent(vulnerability.businessImpact)}</p>
            </div>
          </div>
          
          <Separator className="my-6" />
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 className="text-lg font-semibold mb-2">Known Exploits</h3>
              <p className="text-sm">{cleanContent(vulnerability.knownExploits)}</p>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold mb-2">Mitigation Strategies</h3>
              <p className="text-sm">{cleanContent(vulnerability.mitigationStrategies)}</p>
            </div>
          </div>
          
          <Separator className="my-6" />
          
          <div>
            <h3 className="text-lg font-semibold mb-2">Related Vulnerabilities</h3>
            <div className="flex flex-wrap gap-1">
              {vulnerability.relatedVulnerabilities.map((cve, index) => (
                <Badge key={index} variant="outline">
                  {cve}
                </Badge>
              ))}
            </div>
          </div>
          
          <div className="mt-6">
            <Button variant="outline" asChild>
              <a href={vulnerability.link} target="_blank" rel="noopener noreferrer">
                View Original Source
              </a>
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityDetail;
