
import React, { useState } from 'react';
import { X } from 'lucide-react';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Separator } from '@/components/ui/separator';
import { EnrichedVulnerability } from '@/types/vulnerability';
import { getSeverityColor } from './VulnerabilityCard';
import { cn } from '@/lib/utils';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';

interface VulnerabilityDetailProps {
  vulnerability: EnrichedVulnerability;
  onClose: () => void;
}

const VulnerabilityDetail: React.FC<VulnerabilityDetailProps> = ({ vulnerability, onClose }) => {
  const formattedDate = new Date(vulnerability.pubDate).toLocaleDateString('en-US', {
    year: 'numeric', month: 'long', day: 'numeric'
  });
  
  // Default to "technical" tab
  const [activeTab, setActiveTab] = useState('technical');

  return (
    <div className="fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4">
      <div className="bg-card rounded-lg shadow-lg w-full max-w-4xl max-h-[90vh] overflow-hidden flex flex-col">
        <div className="relative">
          {/* Header with colored strip based on severity */}
          <div className={cn(`h-1.5 w-full`, getSeverityColor(vulnerability.severityLevel))} />
          
          <Button 
            variant="ghost" 
            size="icon" 
            onClick={onClose}
            className="absolute right-4 top-4 z-10"
          >
            <X className="h-5 w-5" />
          </Button>
        </div>
        
        <div className="p-6">
          {/* Vulnerability ID & Severity Badge */}
          <div className="flex flex-wrap gap-2 items-center mb-2">
            <Badge variant="outline" className="text-sm font-mono">{vulnerability.cveId}</Badge>
            <Badge className={cn("font-semibold", getSeverityColor(vulnerability.severityLevel), "text-white")}>
              {vulnerability.severityLevel.toUpperCase()}
            </Badge>
            {vulnerability.cvssScore && (
              <Badge variant="outline" className="font-mono">
                CVSS {vulnerability.cvssScore.toFixed(1)}
              </Badge>
            )}
          </div>
          
          {/* Title */}
          <h2 className="text-2xl font-bold mb-1">{vulnerability.title}</h2>
          <p className="text-sm text-muted-foreground mb-6">Published: {formattedDate}</p>
          
          {/* Tabs */}
          <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
            <TabsList className="mb-6">
              <TabsTrigger value="technical">Technical</TabsTrigger>
              <TabsTrigger value="business">Business</TabsTrigger>
              <TabsTrigger value="exploits">Exploits</TabsTrigger>
              <TabsTrigger value="mitigation">Mitigation</TabsTrigger>
            </TabsList>
            
            {/* Technical Tab */}
            <TabsContent value="technical" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Description</h3>
                <p className="text-sm">{vulnerability.description}</p>
              </div>
              
              <Separator className="my-4" />
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Technical Analysis</h3>
                <p className="text-sm">{vulnerability.technicalAnalysis}</p>
              </div>
              
              <div className="mt-4">
                <h3 className="text-lg font-semibold mb-2">Affected Products</h3>
                <div className="flex flex-wrap gap-1 mt-2">
                  {vulnerability.affectedProducts.map((product, index) => (
                    <Badge key={index} variant="secondary">
                      {product}
                    </Badge>
                  ))}
                </div>
              </div>
            </TabsContent>
            
            {/* Business Impact Tab */}
            <TabsContent value="business" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Business Impact</h3>
                <p className="text-sm">{vulnerability.businessImpact}</p>
              </div>
            </TabsContent>
            
            {/* Exploits Tab */}
            <TabsContent value="exploits" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Known Exploits</h3>
                <p className="text-sm">{vulnerability.knownExploits}</p>
              </div>
              
              <Separator className="my-4" />
              
              <div>
                <h3 className="text-lg font-semibold mb-2">Related Vulnerabilities</h3>
                <div className="flex flex-wrap gap-1">
                  {vulnerability.relatedVulnerabilities.map((cve, index) => (
                    <Badge key={index} variant="outline">
                      {cve}
                    </Badge>
                  ))}
                </div>
              </div>
            </TabsContent>
            
            {/* Mitigation Tab */}
            <TabsContent value="mitigation" className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold mb-2">Mitigation Strategies</h3>
                <p className="text-sm">{vulnerability.mitigationStrategies}</p>
              </div>
            </TabsContent>
          </Tabs>
          
          <div className="mt-6">
            <Button variant="outline" asChild>
              <a href={vulnerability.link} target="_blank" rel="noopener noreferrer">
                View Original Source
              </a>
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityDetail;
