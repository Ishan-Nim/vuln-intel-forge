
import React from 'react';
import { Link } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { ArrowRight } from 'lucide-react';

const VulnerabilityPreviewSection = () => {
  return (
    <section className="py-16 bg-accent/30">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl font-bold text-center mb-6">Real-Time Vulnerability Intelligence</h2>
        <p className="text-center text-lg text-muted-foreground mb-12 max-w-3xl mx-auto">
          Access our continuously updated database of real-world security vulnerabilities
        </p>
        
        <div className="max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {/* CVE Card 1 */}
          <VulnerabilityCard 
            severity="MEDIUM"
            cvssScore="6.0"
            cveId="CVE-2025-4860"
            title="D-Link DAP-2695 DHCPS Cross-Site Scripting Vulnerability"
            date="May 18, 2025"
            products={["Apache Server 2.4.x", "Windows 10", "Ubuntu 20.04 LTS"]}
            description="This vulnerability allows remote attackers to execute arbitrary code via a crafted HTTP request, related to improper input validation."
          />
          
          {/* CVE Card 2 */}
          <VulnerabilityCard 
            severity="CRITICAL"
            cvssScore="9.0"
            cveId="CVE-2025-4859"
            title="D-Link DAP-2695 Cross-Site Scripting in MAC Bypass Settings Page"
            date="May 18, 2025"
            products={["Apache Server 2.4.x", "Windows 10", "Ubuntu 20.04 LTS"]}
            description="This vulnerability allows remote attackers to execute arbitrary code via a crafted HTTP request, related to improper input validation."
          />
          
          {/* CVE Card 3 */}
          <VulnerabilityCard 
            severity="HIGH"
            cvssScore="7.0"
            cveId="CVE-2025-4858"
            title="D-Link ARP Spoofing Prevention Page Cross-Site Scripting Vulnerability"
            date="May 18, 2025"
            products={["Apache Server 2.4.x", "Windows 10", "Ubuntu 20.04 LTS"]}
            description="This vulnerability allows remote attackers to execute arbitrary code via a crafted HTTP request, related to improper input validation."
          />
        </div>
        
        <div className="flex justify-center mt-10">
          <Button asChild size="lg">
            <Link to="/vulndb">Explore Full Vulnerability Database</Link>
          </Button>
        </div>
      </div>
    </section>
  );
};

interface VulnerabilityCardProps {
  severity: 'CRITICAL' | 'HIGH' | 'MEDIUM' | 'LOW';
  cvssScore: string;
  cveId: string;
  title: string;
  date: string;
  products: string[];
  description: string;
}

const VulnerabilityCard: React.FC<VulnerabilityCardProps> = ({
  severity,
  cvssScore,
  cveId,
  title,
  date,
  products,
  description
}) => {
  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'CRITICAL': return 'bg-red-500';
      case 'HIGH': return 'bg-orange-500';
      case 'MEDIUM': return 'bg-yellow-500';
      case 'LOW': return 'bg-blue-500';
      default: return 'bg-gray-500';
    }
  };

  return (
    <div className="bg-card border rounded-lg overflow-hidden shadow-md transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
      <div className={`h-2 w-full ${getSeverityColor(severity)}`}></div>
      <div className="p-5">
        <div className="flex justify-between items-start mb-2">
          <span className="text-xs font-mono bg-muted px-2 py-1 rounded">{cveId}</span>
          <div className="flex items-center gap-1">
            <span className={`${getSeverityColor(severity)} text-xs text-white px-2 py-0.5 rounded`}>{severity}</span>
            <span className="text-xs font-mono">CVSS {cvssScore}</span>
          </div>
        </div>
        
        <h3 className="font-bold mb-1">{title}</h3>
        <p className="text-xs text-muted-foreground mb-3">{date}</p>
        
        <div className="mb-3">
          <h4 className="text-xs font-medium text-muted-foreground">AFFECTED PRODUCTS</h4>
          <div className="flex flex-wrap gap-1 mt-1">
            {products.map((product, index) => (
              <span key={index} className="text-xs bg-muted px-2 py-0.5 rounded">{product}</span>
            ))}
          </div>
        </div>
        
        <div className="mb-3">
          <h4 className="text-xs font-medium text-muted-foreground">TECHNICAL ANALYSIS</h4>
          <p className="text-xs mt-1">{description}</p>
        </div>
        
        <Button variant="outline" size="sm" className="w-full mt-2 text-xs">
          View full details
          <ArrowRight className="h-3 w-3 ml-2" />
        </Button>
      </div>
    </div>
  );
};

export default VulnerabilityPreviewSection;
