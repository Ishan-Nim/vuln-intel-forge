
import React from 'react';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';
import { EnrichedVulnerability } from '@/types/vulnerability';
import { cn } from '@/lib/utils';
import { Button } from '@/components/ui/button';
import { ChevronRight } from 'lucide-react';

interface VulnerabilityCardProps {
  vulnerability: EnrichedVulnerability;
  onSelect?: (vulnerability: EnrichedVulnerability) => void;
}

export const getSeverityColor = (severity: string) => {
  switch (severity) {
    case 'critical': return 'bg-severity-critical';
    case 'high': return 'bg-severity-high';
    case 'medium': return 'bg-severity-medium';
    case 'low': return 'bg-severity-low';
    default: return 'bg-severity-info';
  }
};

const VulnerabilityCard: React.FC<VulnerabilityCardProps> = ({ vulnerability, onSelect }) => {
  const handleClick = () => {
    if (onSelect) {
      onSelect(vulnerability);
    }
  };

  const formattedDate = new Date(vulnerability.pubDate).toLocaleDateString('en-US', {
    year: 'numeric', month: 'short', day: 'numeric'
  });

  return (
    <Card 
      className="vulnerability-tile h-full overflow-hidden"
    >
      <div className={cn(`h-2 w-full`, getSeverityColor(vulnerability.severityLevel))} />
      <CardHeader className="pb-2">
        <div className="flex justify-between items-start">
          <Badge variant="outline">{vulnerability.cveId}</Badge>
          <div className="flex items-center gap-2">
            <Badge className={cn("font-semibold", getSeverityColor(vulnerability.severityLevel), "text-white")}>
              {vulnerability.severityLevel.toUpperCase()}
            </Badge>
            {vulnerability.cvssScore && (
              <Badge variant="outline" className="font-mono">
                CVSS {vulnerability.cvssScore.toFixed(1)}
              </Badge>
            )}
          </div>
        </div>
        <CardTitle className="text-lg line-clamp-2 mt-2">{vulnerability.title}</CardTitle>
        <CardDescription className="text-xs">{formattedDate}</CardDescription>
      </CardHeader>
      <CardContent className="pb-4">
        <p className="text-sm line-clamp-3">{vulnerability.description}</p>
        
        <Separator className="my-3" />
        
        <div className="space-y-3">
          <div>
            <h4 className="text-xs font-semibold text-muted-foreground">AFFECTED PRODUCTS</h4>
            <div className="flex flex-wrap gap-1 mt-1">
              {vulnerability.affectedProducts.map((product, index) => (
                <Badge key={index} variant="secondary" className="text-xs">
                  {product}
                </Badge>
              ))}
            </div>
          </div>
          
          <div>
            <h4 className="text-xs font-semibold text-muted-foreground">TECHNICAL ANALYSIS</h4>
            <p className="text-xs line-clamp-2 mt-1">{vulnerability.technicalAnalysis}</p>
          </div>
        </div>
      </CardContent>
      <CardFooter className="pt-0">
        <Button 
          onClick={handleClick}
          variant="secondary" 
          className="w-full justify-between bg-secondary hover:bg-secondary/80 text-sm"
        >
          View full details
          <ChevronRight className="h-4 w-4" />
        </Button>
      </CardFooter>
    </Card>
  );
};

export default VulnerabilityCard;
