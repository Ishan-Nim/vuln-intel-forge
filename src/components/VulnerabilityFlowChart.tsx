
import React, { useCallback } from 'react';
import ReactFlow, {
  MiniMap,
  Controls,
  Background,
  useNodesState,
  useEdgesState,
  addEdge,
  Node,
  Edge,
  ConnectionLineType,
  MarkerType,
} from 'reactflow';
import 'reactflow/dist/style.css';

const initialNodes: Node[] = [
  {
    id: '1',
    type: 'input',
    data: { label: 'Mr.Vulnr0 Bot' },
    position: { x: 250, y: 0 },
    style: {
      background: '#3b82f6',
      color: 'white',
      border: '1px solid #2563eb',
      borderRadius: '8px',
      width: 180,
    },
  },
  {
    id: '2',
    data: { label: 'Scans for Vulnerabilities' },
    position: { x: 250, y: 100 },
    style: {
      border: '1px solid #d1d5db',
      borderRadius: '8px',
      width: 200,
    },
  },
  {
    id: '3',
    data: { label: 'Vulnerability Database' },
    position: { x: 250, y: 200 },
    style: {
      background: '#10b981',
      color: 'white',
      border: '1px solid #059669',
      borderRadius: '8px',
      width: 200,
    },
  },
  {
    id: '4',
    data: { label: 'Analyzes Severity & Impact' },
    position: { x: 450, y: 150 },
    style: {
      border: '1px solid #d1d5db',
      borderRadius: '8px',
      width: 200,
    },
  },
  {
    id: '5',
    data: { label: 'Generates Reports' },
    position: { x: 450, y: 250 },
    style: {
      border: '1px solid #d1d5db',
      borderRadius: '8px',
      width: 200,
    },
  },
  {
    id: '6',
    type: 'output',
    data: { label: 'Real-time Security Alerts' },
    position: { x: 350, y: 350 },
    style: {
      background: '#f97316',
      color: 'white',
      border: '1px solid #ea580c',
      borderRadius: '8px',
      width: 200,
    },
  },
];

const initialEdges: Edge[] = [
  {
    id: 'e1-2',
    source: '1',
    target: '2',
    animated: true,
    style: { stroke: '#3b82f6' },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: 'e2-3',
    source: '2',
    target: '3',
    animated: true,
    style: { stroke: '#10b981' },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: 'e3-4',
    source: '3',
    target: '4',
    animated: true,
    style: { stroke: '#10b981' },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: 'e4-5',
    source: '4',
    target: '5',
    animated: true,
    style: { stroke: '#f97316' },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: 'e5-6',
    source: '5',
    target: '6',
    animated: true,
    style: { stroke: '#f97316' },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
  {
    id: 'e3-6',
    source: '3',
    target: '6',
    type: 'step',
    style: { stroke: '#f97316' },
    markerEnd: {
      type: MarkerType.ArrowClosed,
    },
  },
];

const VulnerabilityFlowChart = () => {
  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);

  const onConnect = useCallback((params: any) => setEdges((eds) => addEdge(params, eds)), []);

  return (
    <div className="w-full h-[500px] bg-background border rounded-lg shadow-sm mb-12">
      <ReactFlow
        nodes={nodes}
        edges={edges}
        onNodesChange={onNodesChange}
        onEdgesChange={onEdgesChange}
        onConnect={onConnect}
        connectionLineType={ConnectionLineType.SmoothStep}
        fitView
      >
        <Controls />
        <MiniMap />
        <Background color="#f8fafc" gap={16} />
      </ReactFlow>
    </div>
  );
};

export default VulnerabilityFlowChart;
